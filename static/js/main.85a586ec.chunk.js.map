{"version":3,"sources":["reducers/state.js","reducers/organization.js","reducers/repository.js","reducers/index.js","styles/index.js","components/Title/index.js","components/Home.js","components/AccessForm/style.js","components/AccessForm/AccessForm.js","components/Repository/RepositoryTable.js","components/Repository/RepositoryList.js","components/Confirm.js","components/AppFooter.js","components/Organization/OrganizationTable.js","components/Organization/OrganizationList.js","AppStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","state","accessToken","result","successAction","type","DELETE_SUCCESS","errorAction","DELETE_ERROR","homeAction","HOME","AccessFormAction","ACCESS_FORM","SelectOrganizationAction","SELECT_ORGANIZATION","showTableAction","SHOW_TABLE","confirmAction","CONFIRM","reducer","action","ACCESS_TOKEN","data","login","avatarUrl","name","description","map","organization","index","key","avatar_url","repositories","starred","watched","createdAt","updatedAt","repository","stargazers_count","watchers_count","created_at","updated_at","rootReducer","combineReducers","avatarWrapper","css","TableWrapper","titleWrapper","buttonWrapper","textInBody","Title","content","children","Home","dispatch","useDispatch","className","onClick","InputWrapper","config","url","method","AccessForm","Form","useForm","form","useState","loading","setLoading","onFinish","values","axios","headers","Authorization","then","response","getOrganizationsActionCreator","catch","error","message","request","finally","Item","rules","required","placeholder","href","target","rel","htmlType","getLocaleString","date","Date","toLocaleString","RepositoryTable","dataIndex","useSelector","rootState","currentOrganization","isLoading","setIsLoading","selectedRepositories","setSelectedRepositories","searchInput","useRef","handleSearch","selectedKeys","confirm","columns","title","sorter","a","b","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","value","onChange","e","onPressEnter","marginBottom","display","handleReset","size","width","icon","SearchOutlined","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","fontWeight","defaultSortOrder","useEffect","rowSelection","selectedRowKey","renderTable","dataSource","scroll","x","y","RepositoryList","isModalVisible","setIsModalVisible","hasSelected","length","height","fontSize","gridTemplateColumns","gap","onOk","all","onCancel","Confirm","onClickBackButton","status","extra","AppFooter","src","preview","OrganizationTable","setCurrentOrganization","organizations","OrganizationList","getRepositoriesActionCreator","footer","App","SwitchTransition","mode","CSSTransition","classNames","addEndListener","node","done","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.85a586ec.chunk.js","sourcesContent":["import {\n  HOME,\n  ACCESS_FORM,\n  CONFIRM,\n  SELECT_ORGANIZATION,\n  SHOW_TABLE,\n  ACCESS_TOKEN,\n  DELETE_SUCCESS,\n  DELETE_ERROR,\n} from '../utils/strings.json';\n\nexport const initialState = {\n  state: '',\n  accessToken: '',\n  result: 'idle',\n};\n\nexport const successAction = {\n  type: DELETE_SUCCESS,\n};\n\nexport const errorAction = {\n  type: DELETE_ERROR,\n};\n\nexport const tokenActionCreator = (data) => ({\n  type: ACCESS_TOKEN,\n  data,\n});\n\nexport const homeAction = {\n  type: HOME,\n};\n\nexport const AccessFormAction = {\n  type: ACCESS_FORM,\n};\n\nexport const SelectOrganizationAction = {\n  type: SELECT_ORGANIZATION,\n};\n\nexport const showTableAction = {\n  type: SHOW_TABLE,\n};\n\nexport const confirmAction = {\n  type: CONFIRM,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HOME:\n      return {\n        ...state,\n        state: HOME,\n      };\n    case ACCESS_FORM:\n      return {\n        ...state,\n        state: ACCESS_FORM,\n      };\n    case SELECT_ORGANIZATION:\n      return {\n        ...state,\n        state: SELECT_ORGANIZATION,\n      };\n    case SHOW_TABLE:\n      return {\n        ...state,\n        state: SHOW_TABLE,\n      };\n    case CONFIRM:\n      return {\n        ...state,\n        state: CONFIRM,\n      };\n    case ACCESS_TOKEN:\n      return {\n        ...state,\n        accessToken: action.data,\n      };\n    case DELETE_SUCCESS:\n      return {\n        ...state,\n        result: 'success',\n      };\n    case DELETE_ERROR:\n      return {\n        ...state,\n        result: 'error',\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const initialState = {\n  login: {\n    avatarUrl: '',\n    name: '',\n  },\n  description: '',\n};\n\nexport const getOrganizationsActionCreator = (data) => ({\n  type: 'ACCESS_ORGANIZATIONS',\n  data,\n});\n\nconst reducer = (state = [initialState], action) => {\n  switch (action.type) {\n    case 'ACCESS_ORGANIZATIONS':\n      return action.data.map((organization, index) => ({\n        ...initialState,\n        key: index,\n        login: {\n          avatarUrl: organization.avatar_url,\n          name: organization.login,\n        },\n        description: organization.description,\n      }));\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const initialState = {\n  login: '',\n  repositories: [\n    {\n      name: '',\n      starred: 0,\n      watched: 0,\n      createdAt: null,\n      updatedAt: null,\n    },\n  ],\n};\n\nexport const getRepositoriesActionCreator = (data) => ({\n  type: 'ACCESS_REPOSITORIES',\n  data,\n});\n\nexport const loginActionCreator = (data) => ({\n  type: 'LOGIN',\n  data,\n});\n\nconst reducer = (state = [initialState], action) => {\n  switch (action.type) {\n    case 'ACCESS_REPOSITORIES':\n      return {\n        ...state,\n        repositories: action.data.map((repository, index) => ({\n          key: index,\n          name: repository.name,\n          starred: repository.stargazers_count,\n          watched: repository.watchers_count,\n          createdAt: repository.created_at,\n          updatedAt: repository.updated_at,\n        })),\n      };\n    case 'LOGIN':\n      return {\n        ...initialState,\n        login: action.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport state from './state';\nimport organization from './organization';\nimport repository from './repository';\n\n// initialState를 기준으로 reducer 파일을 분리시킴.\n// reducer: 이전 상태와 액션을 이용해서 다음 상태를 결정\nconst rootReducer = combineReducers({\n  state,\n  organization,\n  repository,\n});\n\nexport default rootReducer;\n","import { css } from '@emotion/react';\n\nexport const avatarWrapper = css`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  div {\n    margin-right: 10px;\n  }\n`;\n\nexport const TableWrapper = css`\n  max-width: 30vh;\n  @media screen and (min-width: 360px) {\n    max-width: 35vh;\n  }\n\n  @media screen and (min-width: 425px) {\n    max-width: 40vh;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 70vh;\n  }\n  @media screen and (min-width: 1096px) {\n    max-width: 120vh;\n  }\n`;\nexport const titleWrapper = css`\n  font-family: 'Work Sans', sans-serif;\n  color: #EDEBEC;\n\n  @media screen and (min-width: 360px) {\n    font-size: 5vw;\n  }\n\n  \n  @media screen and (min-width: 426px) {\n    font-size: 5vw;\n  }\n`;\n\nexport const buttonWrapper = css`\n  font-family: 'Open Sans Condensed', sans-serif;\n  color: #FFF;\n\n  @media screen and (min-width: 360px) {\n    width: 26vw;\n    font-size: 2vw;\n    height: 10vw;\n  }\n\n  @media screen and (min-width: 426px) {\n    width: 30vw;\n    font-size: 3vw;\n    height: 6vw;\n  }\n`;\n\nexport const textInBody = css`\n  color: #F7F8FB\n`;\n","/** @jsxImportSource @emotion/react */\n\nimport { titleWrapper } from '../../styles';\n\n// eslint-disable-next-line react/destructuring-assignment\nconst Title = (content) => <p css={titleWrapper}>{content.children}</p>;\n\nexport default Title;\n","/** @jsxImportSource @emotion/react */\nimport { Button } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { AccessFormAction } from '../reducers/state';\nimport { buttonWrapper } from '../styles';\nimport Title from './Title';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const onClick = () => {\n    dispatch(AccessFormAction);\n  };\n\n  return (\n    <>\n      <Title>\n        Organization Cleaner\n      </Title>\n\n      <Button\n        css={buttonWrapper}\n        type=\"primary\"\n        className=\"btn btn-white btn-animate\"\n        onClick={onClick}\n      >\n        <span>Go!</span>\n      </Button>\n    </>\n  );\n};\n\nexport default Home;\n","import { css } from '@emotion/react';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const InputWrapper = css`\n  min-width: 300px;\n  min-height: 60px;\n`;\n","/** @jsxImportSource @emotion/react */\n// https://api.github.com/user/orgs?access_token=ACCESS_TOKEN\n// https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/\nimport {\n  Button, Form, Input, message,\n} from 'antd';\nimport { useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { SelectOrganizationAction, tokenActionCreator } from '../../reducers/state';\nimport { InputWrapper } from './style';\nimport { getOrganizationsActionCreator } from '../../reducers/organization';\nimport { textInBody } from '../../styles';\n\nconst config = {\n  url: 'https://api.github.com/user/orgs',\n  method: 'get',\n};\n\nconst AccessForm = () => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    dispatch(tokenActionCreator(values.accessToken));\n    axios(\n      {\n        ...config,\n        headers: {\n          Authorization: `token ${values.accessToken}`,\n        },\n      },\n    )\n      .then((response) => {\n        dispatch(SelectOrganizationAction);\n        dispatch(getOrganizationsActionCreator(response.data));\n      })\n      .catch((error) => {\n        if (error.response) {\n          // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n          // console.log(error.response.data);\n          // console.log(error.response.status);\n          // console.log(error.response.headers);\n          message.error(error.response.data.message);\n        } else if (error.request) {\n          // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n          // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n          // Node.js의 http.ClientRequest 인스턴스입니다.\n          // console.log(error.request);\n          message.error('Try again.');\n        } else {\n          // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n          message.error(error.message);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish}>\n      <Form.Item\n        name=\"accessToken\"\n        rules={[{\n          required: true,\n        }]}\n      >\n        <Input\n          css={InputWrapper}\n          placeholder=\"Github Access Token\"\n        />\n      </Form.Item>\n      <p>\n        <a\n          css={textInBody}\n          href=\"https://github.com/settings/tokens\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          Get Access Token\n        </a>\n      </p>\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={loading}\n        >\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default AccessForm;\n","/** @jsxImportSource @emotion/react */\nimport {\n  Button, Input, Space, Table,\n} from 'antd';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState, useRef } from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { TableWrapper } from '../../styles';\n\nconst getLocaleString = (date) => {\n  const a = new Date(date);\n  return a.toLocaleString();\n};\n\nconst RepositoryTable = () => {\n  const repositories = useSelector((rootState) => rootState.repository.repositories);\n  const currentOrganization = useSelector((rootState) => rootState.repository.login);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedRepositories, setSelectedRepositories] = useState([]);\n  const searchInput = useRef();\n\n  const handleSearch = (selectedKeys, confirm) => {\n    confirm();\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n  };\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys, selectedKeys, confirm, clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={searchInput}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => (record[dataIndex]\n      ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n      : ''),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) => (\n      <a\n        style={{ fontWeight: 'bold' }}\n        href={`https://www.github.com/${currentOrganization}/${text}`}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        {text}\n      </a>\n    ),\n  });\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      sorter: (a, b) => (a.name > b.name) - (a.name < b.name),\n      ...getColumnSearchProps('name'),\n    },\n    {\n      title: 'Creation Date',\n      dataIndex: 'createdAt',\n      render: getLocaleString,\n      defaultSortOrder: 'descend',\n      sorter: (a, b) => (a.createdAt > b.createdAt) - (a.createdAt < b.createdAt),\n    },\n    {\n      title: 'Last Updated Date',\n      dataIndex: 'updatedAt',\n      render: getLocaleString,\n      sorter: (a, b) => (a.updatedAt > b.updatedAt) - (a.updatedAt < b.updatedAt),\n    },\n    {\n      title: 'Star',\n      dataIndex: 'starred',\n      width: 60,\n      sorter: (a, b) => (a.starred > b.starred) - (a.starred < b.starred),\n    },\n    {\n      title: 'Watch',\n      dataIndex: 'watched',\n      width: 60,\n      sorter: (a, b) => (a.watched > b.watched) - (a.watched < b.watched),\n    },\n  ];\n\n  useEffect(() => {\n    setIsLoading(true);\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [repositories]);\n\n  const onSelectChange = (selectedRowKey) => {\n    setSelectedRepositories(selectedRowKey);\n  };\n\n  const rowSelection = {\n    onChange: onSelectChange,\n  };\n\n  const renderTable = () => (\n    <Table\n      css={TableWrapper}\n      columns={columns}\n      rowSelection={rowSelection}\n      dataSource={repositories}\n      loading={isLoading}\n      scroll={{ x: 'calc(500px)', y: 300 }}\n    />\n  );\n  return {\n    renderTable,\n    selectedRepositories,\n  };\n};\n\nexport default RepositoryTable;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  Button, message, Modal,\n} from 'antd';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport {\n  confirmAction, errorAction,\n  SelectOrganizationAction,\n  successAction,\n} from '../../reducers/state';\nimport RepositoryTable from './RepositoryTable';\nimport Title from '../Title';\n\nconst RepositoryList = () => {\n  const dispatch = useDispatch();\n  const repositories = useSelector((rootState) => rootState.repository.repositories);\n  const { accessToken } = useSelector((rootState) => rootState.state);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const currentOrganization = useSelector((rootState) => rootState.repository.login);\n\n  const {\n    renderTable,\n    selectedRepositories,\n  } = RepositoryTable();\n\n  const hasSelected = selectedRepositories.length > 0;\n\n  const onBackButtonClick = () => {\n    dispatch(SelectOrganizationAction);\n  };\n\n  const onDeleteButtonClick = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    axios.all(selectedRepositories.map((index) => axios({\n      method: 'delete',\n      url: `https://api.github.com/repos/${currentOrganization}/${repositories[index].name}`,\n      headers: {\n        Authorization: `token ${accessToken}`,\n      },\n    })))\n      .then(() => {\n        dispatch(successAction);\n      })\n      .catch((error) => {\n        if (error.response) {\n          message.error(error.response.data.message);\n        } else if (error.request) {\n          message.error('Try again.');\n        } else {\n          message.error(error.message);\n        }\n        dispatch(errorAction);\n      });\n\n    dispatch(confirmAction);\n  };\n\n  return (\n    <>\n      <Title>\n        Select Repositories\n      </Title>\n      {hasSelected\n        ? (\n          <div style={{\n            height: '40px',\n          }}\n          >\n            <p style={{ fontSize: 'x-large' }}>\n              {`${selectedRepositories.length} selected`}\n            </p>\n          </div>\n        )\n        : <div style={{ height: '40px' }} />}\n\n      {renderTable()}\n      <div style={\n        {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '0 40px',\n        }\n      }\n      >\n        <Button\n          onClick={onBackButtonClick}\n        >\n          Back\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={onDeleteButtonClick}\n        >\n          Delete\n        </Button>\n      </div>\n      <Modal\n        title=\"Confirm\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p>\n          <strong>{selectedRepositories.length}</strong>\n          {' '}\n          repositories will be deleted.\n        </p>\n      </Modal>\n    </>\n  );\n};\n\nexport default RepositoryList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Button, Result } from 'antd';\nimport { homeAction, SelectOrganizationAction } from '../reducers/state';\n\nconst Confirm = () => {\n  const dispatch = useDispatch();\n  const { result } = useSelector((rootState) => rootState.state);\n  const onClick = () => {\n    dispatch(homeAction);\n  };\n\n  const onClickBackButton = () => {\n    dispatch(SelectOrganizationAction);\n  };\n\n  return (\n    <>\n      {result === 'success' && (\n      <Result\n        status=\"success\"\n        title=\"Successfully deleted repositories. \"\n        extra={[\n          <Button\n            type=\"primary\"\n            key=\"back_button\"\n            onClick={onClickBackButton}\n          >\n            Back\n          </Button>,\n          <Button\n            key=\"home_button\"\n            onClick={onClick}\n          >\n            Home\n          </Button>,\n        ]}\n      />\n      )}\n      {result === 'error' && (\n      <Result\n        status=\"warning\"\n        title=\"There are some problems with your operation.\"\n        extra={(\n          <Button\n            type=\"primary\"\n            onClick={onClickBackButton}\n          >\n            Back\n          </Button>\n)}\n      />\n      )}\n\n    </>\n  );\n};\n\nexport default Confirm;\n","/** @jsxImportSource @emotion/react */\nimport { textInBody } from '../styles';\n\nconst AppFooter = () => (\n  <>\n    Made by&nbsp;\n    <a\n      css={textInBody}\n      href=\"https://github.com/wilddoubt\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n    >\n      wildDoubt\n    </a>\n  </>\n);\n\nexport default AppFooter;\n","/** @jsxImportSource @emotion/react */\nimport { Image, Table } from 'antd';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { avatarWrapper, TableWrapper } from '../../styles';\n\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'login',\n    render: ({ avatarUrl, name }) => (\n      <div css={avatarWrapper}>\n        <Image\n          src={avatarUrl}\n          width={16}\n          preview={false}\n        />\n        <a\n          style={{ fontWeight: 'bold' }}\n          href={`https://www.github.com/${name}`}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          {name}\n        </a>\n      </div>\n    ),\n  },\n  {\n    title: 'Description',\n    dataIndex: 'description',\n  },\n];\n\nconst OrganizationTable = () => {\n  const [currentOrganization, setCurrentOrganization] = useState('');\n  const organizations = useSelector((rootState) => rootState.organization);\n\n  const onSelectChange = (selectedRowKey) => {\n    setCurrentOrganization(organizations[selectedRowKey].login.name);\n  };\n\n  const rowSelection = {\n    type: 'radio',\n    onChange: onSelectChange,\n  };\n\n  const renderTable = () => (\n    <Table\n      css={TableWrapper}\n      rowSelection={rowSelection}\n      columns={columns}\n      dataSource={organizations}\n      scroll={{ x: 'calc(300px)', y: 'calc(350px)' }}\n    />\n  );\n\n  return {\n    renderTable,\n    currentOrganization,\n  };\n};\n\nexport default OrganizationTable;\n","/** @jsxImportSource @emotion/react */\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, message, Modal } from 'antd';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { showTableAction } from '../../reducers/state';\nimport OrganizationTable from './OrganizationTable';\nimport { getRepositoriesActionCreator, loginActionCreator } from '../../reducers/repository';\nimport Title from '../Title';\n\nconst OrganizationList = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { accessToken } = useSelector((rootState) => rootState.state);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  const {\n    renderTable,\n    currentOrganization,\n  } = OrganizationTable();\n\n  const onClick = () => {\n    if (currentOrganization.length > 0) {\n      setIsModalVisible(true);\n    } else {\n      message.error('Oops! You haven\\'t select a organization!!');\n    }\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n    setIsLoading(true);\n    dispatch(loginActionCreator(currentOrganization));\n    axios(\n      {\n        url: `https://api.github.com/orgs/${currentOrganization}/repos?per_page=200`,\n        method: 'get',\n        headers: {\n          Authorization: `token ${accessToken}`,\n        },\n      },\n    )\n      .then((response) => {\n        dispatch(getRepositoriesActionCreator(response.data));\n      })\n      .catch((error) => {\n        if (error.response) {\n          // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\n          // console.log(error.response.status);\n          // console.log(error.response.headers);\n          message.error(error.response.data.message);\n        } else if (error.request) {\n          // 요청이 이루어 졌으나 응답을 받지 못했습니다.\n          // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\n          // Node.js의 http.ClientRequest 인스턴스입니다.\n          // console.log(error.request);\n          message.error('Try again.');\n        } else {\n          // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\n          message.error(error.message);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n        dispatch(showTableAction);\n      });\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <>\n      <Title>\n        Select a Organization\n      </Title>\n      {renderTable()}\n      <Modal\n        title=\"Confirm\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p>\n          You select\n          <strong>\n            {` ${currentOrganization}`}\n          </strong>\n          . Right?\n        </p>\n      </Modal>\n      <Button onClick={onClick} loading={isLoading}>Next</Button>\n    </>\n  );\n};\n\nexport default OrganizationList;\n","import { css } from '@emotion/react';\n\nexport const footer = css`\n  flex: 0;\n  align-self: center;\n`;\n\nexport const content = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  flex: 1;\n  align-self: center;\n`;\n","/** @jsxImportSource @emotion/react */\nimport { Divider } from 'antd';\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Home from './components/Home';\nimport AccessForm from './components/AccessForm/AccessForm';\nimport RepositoryList from './components/Repository/RepositoryList';\nimport Confirm from './components/Confirm';\nimport AppFooter from './components/AppFooter';\nimport OrganizationList from './components/Organization/OrganizationList';\nimport { homeAction } from './reducers/state';\nimport { content, footer } from './AppStyles';\nimport {\n  HOME,\n  ACCESS_FORM,\n  CONFIRM,\n  SELECT_ORGANIZATION,\n  SHOW_TABLE,\n} from './utils/strings.json';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { state } = useSelector((rootState) => rootState.state);\n\n  useEffect(() => {\n    dispatch(homeAction);\n  }, []);\n\n  return (\n    <>\n      <SwitchTransition\n        mode=\"out-in\"\n      >\n        <CSSTransition\n          key={state}\n          classNames=\"fade\"\n          addEndListener={(node, done) => {\n            node.addEventListener('transitionend', done, false);\n          }}\n        >\n          <div css={content}>\n            {state === HOME && <Home />}\n            {state === ACCESS_FORM && <AccessForm />}\n            {state === SELECT_ORGANIZATION && <OrganizationList />}\n            {state === SHOW_TABLE && <RepositoryList />}\n            {state === CONFIRM && <Confirm />}\n          </div>\n        </CSSTransition>\n      </SwitchTransition>\n      <div css={footer}>\n        <Divider />\n        <AppFooter />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
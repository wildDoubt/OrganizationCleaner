{"version":3,"sources":["reducers/state.js","reducers/organization.js","reducers/repository.js","reducers/index.js","styles/index.js","components/Title/index.js","components/Home.js","components/AccessForm/style.js","components/AccessForm/AccessForm.js","components/Repository/RepositoryTable.js","components/Repository/RepositoryList.js","components/Confirm.js","components/AppFooter.js","components/Organization/OrganizationTable.js","components/Organization/OrganizationList.js","AppStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","state","accessToken","result","successAction","type","DELETE_SUCCESS","errorAction","DELETE_ERROR","homeAction","HOME","AccessFormAction","ACCESS_FORM","SelectOrganizationAction","SELECT_ORGANIZATION","showTableAction","SHOW_TABLE","confirmAction","CONFIRM","reducer","action","ACCESS_TOKEN","data","login","avatarUrl","name","description","map","organization","index","key","avatar_url","repositories","starred","watched","createdAt","updatedAt","repository","stargazers_count","watchers_count","created_at","updated_at","rootReducer","combineReducers","avatarWrapper","css","TableWrapper","titleWrapper","buttonWrapper","textInBody","Title","content","children","Home","dispatch","useDispatch","className","onClick","InputWrapper","config","url","method","AccessForm","Form","useForm","form","useState","loading","setLoading","onFinish","values","axios","headers","Authorization","then","response","getOrganizationsActionCreator","catch","error","console","log","status","message","request","finally","Item","rules","required","placeholder","href","target","rel","htmlType","getLocaleString","date","Date","toLocaleString","RepositoryTable","dataIndex","useSelector","rootState","currentOrganization","isLoading","setIsLoading","selectedRepositories","setSelectedRepositories","searchInput","useRef","handleSearch","selectedKeys","confirm","columns","title","sorter","a","b","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","value","onChange","e","onPressEnter","marginBottom","display","handleReset","size","width","icon","SearchOutlined","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","fontWeight","defaultSortOrder","useEffect","rowSelection","selectedRowKey","renderTable","dataSource","scroll","x","y","RepositoryList","isModalVisible","setIsModalVisible","hasSelected","length","height","fontSize","gridTemplateColumns","gap","onOk","all","onCancel","Confirm","onClickBackButton","extra","AppFooter","src","preview","OrganizationTable","setCurrentOrganization","organizations","OrganizationList","getRepositoriesActionCreator","footer","App","SwitchTransition","mode","CSSTransition","classNames","addEndListener","node","done","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.271062d0.chunk.js","sourcesContent":["import {\r\n  HOME,\r\n  ACCESS_FORM,\r\n  CONFIRM,\r\n  SELECT_ORGANIZATION,\r\n  SHOW_TABLE,\r\n  ACCESS_TOKEN,\r\n  DELETE_SUCCESS,\r\n  DELETE_ERROR,\r\n} from '../utils/strings.json';\r\n\r\nexport const initialState = {\r\n  state: '',\r\n  accessToken: '',\r\n  result: 'idle',\r\n};\r\n\r\nexport const successAction = {\r\n  type: DELETE_SUCCESS,\r\n};\r\n\r\nexport const errorAction = {\r\n  type: DELETE_ERROR,\r\n};\r\n\r\nexport const tokenActionCreator = (data) => ({\r\n  type: ACCESS_TOKEN,\r\n  data,\r\n});\r\n\r\nexport const homeAction = {\r\n  type: HOME,\r\n};\r\n\r\nexport const AccessFormAction = {\r\n  type: ACCESS_FORM,\r\n};\r\n\r\nexport const SelectOrganizationAction = {\r\n  type: SELECT_ORGANIZATION,\r\n};\r\n\r\nexport const showTableAction = {\r\n  type: SHOW_TABLE,\r\n};\r\n\r\nexport const confirmAction = {\r\n  type: CONFIRM,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case HOME:\r\n      return {\r\n        ...state,\r\n        state: HOME,\r\n      };\r\n    case ACCESS_FORM:\r\n      return {\r\n        ...state,\r\n        state: ACCESS_FORM,\r\n      };\r\n    case SELECT_ORGANIZATION:\r\n      return {\r\n        ...state,\r\n        state: SELECT_ORGANIZATION,\r\n      };\r\n    case SHOW_TABLE:\r\n      return {\r\n        ...state,\r\n        state: SHOW_TABLE,\r\n      };\r\n    case CONFIRM:\r\n      return {\r\n        ...state,\r\n        state: CONFIRM,\r\n      };\r\n    case ACCESS_TOKEN:\r\n      return {\r\n        ...state,\r\n        accessToken: action.data,\r\n      };\r\n    case DELETE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        result: 'success',\r\n      };\r\n    case DELETE_ERROR:\r\n      return {\r\n        ...state,\r\n        result: 'error',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const initialState = {\r\n  login: {\r\n    avatarUrl: '',\r\n    name: '',\r\n  },\r\n  description: '',\r\n};\r\n\r\nexport const getOrganizationsActionCreator = (data) => ({\r\n  type: 'ACCESS_ORGANIZATIONS',\r\n  data,\r\n});\r\n\r\nconst reducer = (state = [initialState], action) => {\r\n  switch (action.type) {\r\n    case 'ACCESS_ORGANIZATIONS':\r\n      return action.data.map((organization, index) => ({\r\n        ...initialState,\r\n        key: index,\r\n        login: {\r\n          avatarUrl: organization.avatar_url,\r\n          name: organization.login,\r\n        },\r\n        description: organization.description,\r\n      }));\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const initialState = {\r\n  login: '',\r\n  repositories: [\r\n    {\r\n      name: '',\r\n      starred: 0,\r\n      watched: 0,\r\n      createdAt: null,\r\n      updatedAt: null,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const getRepositoriesActionCreator = (data) => ({\r\n  type: 'ACCESS_REPOSITORIES',\r\n  data,\r\n});\r\n\r\nexport const loginActionCreator = (data) => ({\r\n  type: 'LOGIN',\r\n  data,\r\n});\r\n\r\nconst reducer = (state = [initialState], action) => {\r\n  switch (action.type) {\r\n    case 'ACCESS_REPOSITORIES':\r\n      return {\r\n        ...state,\r\n        repositories: action.data.map((repository, index) => ({\r\n          key: index,\r\n          name: repository.name,\r\n          starred: repository.stargazers_count,\r\n          watched: repository.watchers_count,\r\n          createdAt: repository.created_at,\r\n          updatedAt: repository.updated_at,\r\n        })),\r\n      };\r\n    case 'LOGIN':\r\n      return {\r\n        ...initialState,\r\n        login: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport state from './state';\r\nimport organization from './organization';\r\nimport repository from './repository';\r\n\r\n// initialState를 기준으로 reducer 파일을 분리시킴.\r\n// reducer: 이전 상태와 액션을 이용해서 다음 상태를 결정\r\nconst rootReducer = combineReducers({\r\n  state,\r\n  organization,\r\n  repository,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { css } from '@emotion/react';\r\n\r\nexport const avatarWrapper = css`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  div {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const TableWrapper = css`\r\n  max-width: 30vh;\r\n  @media screen and (min-width: 360px) {\r\n    max-width: 35vh;\r\n  }\r\n\r\n  @media screen and (min-width: 425px) {\r\n    max-width: 40vh;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 70vh;\r\n  }\r\n  @media screen and (min-width: 1096px) {\r\n    max-width: 120vh;\r\n  }\r\n`;\r\nexport const titleWrapper = css`\r\n  font-family: 'Work Sans', sans-serif;\r\n  color: #EDEBEC;\r\n\r\n  @media screen and (min-width: 360px) {\r\n    font-size: 5vw;\r\n  }\r\n\r\n  \r\n  @media screen and (min-width: 426px) {\r\n    font-size: 5vw;\r\n  }\r\n`;\r\n\r\nexport const buttonWrapper = css`\r\n  font-family: 'Open Sans Condensed', sans-serif;\r\n  color: #FFF;\r\n\r\n  @media screen and (min-width: 360px) {\r\n    width: 26vw;\r\n    font-size: 2vw;\r\n    height: 10vw;\r\n  }\r\n\r\n  @media screen and (min-width: 426px) {\r\n    width: 30vw;\r\n    font-size: 3vw;\r\n    height: 6vw;\r\n  }\r\n`;\r\n\r\nexport const textInBody = css`\r\n  color: #F7F8FB\r\n`;\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport { titleWrapper } from '../../styles';\r\n\r\n// eslint-disable-next-line react/destructuring-assignment\r\nconst Title = (content) => <p css={titleWrapper}>{content.children}</p>;\r\n\r\nexport default Title;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Button } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AccessFormAction } from '../reducers/state';\r\nimport { buttonWrapper } from '../styles';\r\nimport Title from './Title';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const onClick = () => {\r\n    dispatch(AccessFormAction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        Organization Repository Manager\r\n      </Title>\r\n\r\n      <Button\r\n        css={buttonWrapper}\r\n        type=\"primary\"\r\n        className=\"btn btn-white btn-animate\"\r\n        onClick={onClick}\r\n      >\r\n        <span>Go!</span>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { css } from '@emotion/react';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const InputWrapper = css`\n  min-width: 300px;\n  min-height: 60px;\n`;\n","/** @jsxImportSource @emotion/react */\r\n// https://api.github.com/user/orgs?access_token=ACCESS_TOKEN\r\n// https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/\r\nimport {\r\n  Button, Form, Input, message,\r\n} from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { SelectOrganizationAction, tokenActionCreator } from '../../reducers/state';\r\nimport { InputWrapper } from './style';\r\nimport { getOrganizationsActionCreator } from '../../reducers/organization';\r\nimport { textInBody } from '../../styles';\r\n\r\nconst config = {\r\n  url: 'https://api.github.com/user/orgs',\r\n  method: 'get',\r\n};\r\n\r\nconst AccessForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onFinish = (values) => {\r\n    setLoading(true);\r\n    dispatch(tokenActionCreator(values.accessToken));\r\n    axios(\r\n      {\r\n        ...config,\r\n        headers: {\r\n          Authorization: `token ${values.accessToken}`,\r\n        },\r\n      },\r\n    )\r\n      .then((response) => {\r\n        dispatch(SelectOrganizationAction);\r\n        dispatch(getOrganizationsActionCreator(response.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n          console.log(error.response.data);\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n          message.error(error.response.data.message);\r\n        } else if (error.request) {\r\n          // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n          // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n          // Node.js의 http.ClientRequest 인스턴스입니다.\r\n          console.log(error.request);\r\n          message.error('Try again.');\r\n        } else {\r\n          // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n          message.error(error.message);\r\n        }\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <Form form={form} onFinish={onFinish}>\r\n      <Form.Item\r\n        name=\"accessToken\"\r\n        rules={[{\r\n          required: true,\r\n        }]}\r\n      >\r\n        <Input\r\n          css={InputWrapper}\r\n          placeholder=\"Github Access Token\"\r\n        />\r\n      </Form.Item>\r\n      <p>\r\n        <a\r\n          css={textInBody}\r\n          href=\"https://github.com/settings/tokens\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          Get Access Token\r\n        </a>\r\n      </p>\r\n      <Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={loading}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AccessForm;\r\n","/** @jsxImportSource @emotion/react */\r\nimport {\r\n  Button, Input, Space, Table,\r\n} from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { TableWrapper } from '../../styles';\r\n\r\nconst getLocaleString = (date) => {\r\n  const a = new Date(date);\r\n  return a.toLocaleString();\r\n};\r\n\r\nconst RepositoryTable = () => {\r\n  const repositories = useSelector((rootState) => rootState.repository.repositories);\r\n  const currentOrganization = useSelector((rootState) => rootState.repository.login);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedRepositories, setSelectedRepositories] = useState([]);\r\n  const searchInput = useRef();\r\n\r\n  const handleSearch = (selectedKeys, confirm) => {\r\n    confirm();\r\n  };\r\n\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n  };\r\n\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) => (record[dataIndex]\r\n      ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n      : ''),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current.select(), 100);\r\n      }\r\n    },\r\n    render: (text) => (\r\n      <a\r\n        style={{ fontWeight: 'bold' }}\r\n        href={`https://www.github.com/${currentOrganization}/${text}`}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n      >\r\n        {text}\r\n      </a>\r\n    ),\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      sorter: (a, b) => (a.name > b.name) - (a.name < b.name),\r\n      ...getColumnSearchProps('name'),\r\n    },\r\n    {\r\n      title: 'Creation Date',\r\n      dataIndex: 'createdAt',\r\n      render: getLocaleString,\r\n      defaultSortOrder: 'descend',\r\n      sorter: (a, b) => (a.createdAt > b.createdAt) - (a.createdAt < b.createdAt),\r\n    },\r\n    {\r\n      title: 'Last Updated Date',\r\n      dataIndex: 'updatedAt',\r\n      render: getLocaleString,\r\n      sorter: (a, b) => (a.updatedAt > b.updatedAt) - (a.updatedAt < b.updatedAt),\r\n    },\r\n    {\r\n      title: 'Star',\r\n      dataIndex: 'starred',\r\n      width: 60,\r\n      sorter: (a, b) => (a.starred > b.starred) - (a.starred < b.starred),\r\n    },\r\n    {\r\n      title: 'Watch',\r\n      dataIndex: 'watched',\r\n      width: 60,\r\n      sorter: (a, b) => (a.watched > b.watched) - (a.watched < b.watched),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n  }, [repositories]);\r\n\r\n  const onSelectChange = (selectedRowKey) => {\r\n    setSelectedRepositories(selectedRowKey);\r\n  };\r\n\r\n  const rowSelection = {\r\n    onChange: onSelectChange,\r\n  };\r\n\r\n  const renderTable = () => (\r\n    <Table\r\n      css={TableWrapper}\r\n      columns={columns}\r\n      rowSelection={rowSelection}\r\n      dataSource={repositories}\r\n      loading={isLoading}\r\n      scroll={{ x: 'calc(500px)', y: 300 }}\r\n    />\r\n  );\r\n  return {\r\n    renderTable,\r\n    selectedRepositories,\r\n  };\r\n};\r\n\r\nexport default RepositoryTable;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button, message, Modal,\r\n} from 'antd';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  confirmAction, errorAction,\r\n  SelectOrganizationAction,\r\n  successAction,\r\n} from '../../reducers/state';\r\nimport RepositoryTable from './RepositoryTable';\r\nimport Title from '../Title';\r\n\r\nconst RepositoryList = () => {\r\n  const dispatch = useDispatch();\r\n  const repositories = useSelector((rootState) => rootState.repository.repositories);\r\n  const { accessToken } = useSelector((rootState) => rootState.state);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const currentOrganization = useSelector((rootState) => rootState.repository.login);\r\n\r\n  const {\r\n    renderTable,\r\n    selectedRepositories,\r\n  } = RepositoryTable();\r\n\r\n  const hasSelected = selectedRepositories.length > 0;\r\n\r\n  const onBackButtonClick = () => {\r\n    dispatch(SelectOrganizationAction);\r\n  };\r\n\r\n  const onDeleteButtonClick = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    axios.all(selectedRepositories.map((index) => axios({\r\n      method: 'delete',\r\n      url: `https://api.github.com/repos/${currentOrganization}/${repositories[index].name}`,\r\n      headers: {\r\n        Authorization: `token ${accessToken}`,\r\n      },\r\n    })))\r\n      .then(() => {\r\n        dispatch(successAction);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          message.error(error.response.data.message);\r\n        } else if (error.request) {\r\n          message.error('Try again.');\r\n        } else {\r\n          message.error(error.message);\r\n        }\r\n        dispatch(errorAction);\r\n      });\r\n\r\n    dispatch(confirmAction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        Select Repositories\r\n      </Title>\r\n      {hasSelected\r\n        ? (\r\n          <div style={{\r\n            height: '40px',\r\n          }}\r\n          >\r\n            <p style={{ fontSize: 'x-large' }}>\r\n              {`${selectedRepositories.length} selected`}\r\n            </p>\r\n          </div>\r\n        )\r\n        : <div style={{ height: '40px' }} />}\r\n\r\n      {renderTable()}\r\n      <div style={\r\n        {\r\n          display: 'grid',\r\n          gridTemplateColumns: '1fr 1fr',\r\n          gap: '0 40px',\r\n        }\r\n      }\r\n      >\r\n        <Button\r\n          onClick={onBackButtonClick}\r\n        >\r\n          Back\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={onDeleteButtonClick}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        title=\"Confirm\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>\r\n          <strong>{selectedRepositories.length}</strong>\r\n          {' '}\r\n          repositories will be deleted.\r\n        </p>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RepositoryList;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Result } from 'antd';\r\nimport { homeAction, SelectOrganizationAction } from '../reducers/state';\r\n\r\nconst Confirm = () => {\r\n  const dispatch = useDispatch();\r\n  const { result } = useSelector((rootState) => rootState.state);\r\n  const onClick = () => {\r\n    dispatch(homeAction);\r\n  };\r\n\r\n  const onClickBackButton = () => {\r\n    dispatch(SelectOrganizationAction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {result === 'success' && (\r\n      <Result\r\n        status=\"success\"\r\n        title=\"Successfully deleted repositories. \"\r\n        extra={[\r\n          <Button\r\n            type=\"primary\"\r\n            key=\"back_button\"\r\n            onClick={onClickBackButton}\r\n          >\r\n            Back\r\n          </Button>,\r\n          <Button\r\n            key=\"home_button\"\r\n            onClick={onClick}\r\n          >\r\n            Home\r\n          </Button>,\r\n        ]}\r\n      />\r\n      )}\r\n      {result === 'error' && (\r\n      <Result\r\n        status=\"warning\"\r\n        title=\"There are some problems with your operation.\"\r\n        extra={(\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={onClickBackButton}\r\n          >\r\n            Back\r\n          </Button>\r\n)}\r\n      />\r\n      )}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Confirm;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { textInBody } from '../styles';\r\n\r\nconst AppFooter = () => (\r\n  <>\r\n    Made by&nbsp;\r\n    <a\r\n      css={textInBody}\r\n      href=\"https://github.com/wilddoubt\"\r\n      target=\"_blank\"\r\n      rel=\"noreferrer noopener\"\r\n    >\r\n      wildDoubt\r\n    </a>\r\n  </>\r\n);\r\n\r\nexport default AppFooter;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Image, Table } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { avatarWrapper, TableWrapper } from '../../styles';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'login',\r\n    render: ({ avatarUrl, name }) => (\r\n      <div css={avatarWrapper}>\r\n        <Image\r\n          src={avatarUrl}\r\n          width={16}\r\n          preview={false}\r\n        />\r\n        <a\r\n          style={{ fontWeight: 'bold' }}\r\n          href={`https://www.github.com/${name}`}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n        >\r\n          {name}\r\n        </a>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Description',\r\n    dataIndex: 'description',\r\n  },\r\n];\r\n\r\nconst OrganizationTable = () => {\r\n  const [currentOrganization, setCurrentOrganization] = useState('');\r\n  const organizations = useSelector((rootState) => rootState.organization);\r\n\r\n  const onSelectChange = (selectedRowKey) => {\r\n    setCurrentOrganization(organizations[selectedRowKey].login.name);\r\n  };\r\n\r\n  const rowSelection = {\r\n    type: 'radio',\r\n    onChange: onSelectChange,\r\n  };\r\n\r\n  const renderTable = () => (\r\n    <Table\r\n      css={TableWrapper}\r\n      rowSelection={rowSelection}\r\n      columns={columns}\r\n      dataSource={organizations}\r\n      scroll={{ x: 'calc(300px)', y: 'calc(350px)' }}\r\n    />\r\n  );\r\n\r\n  return {\r\n    renderTable,\r\n    currentOrganization,\r\n  };\r\n};\r\n\r\nexport default OrganizationTable;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, message, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { showTableAction } from '../../reducers/state';\r\nimport OrganizationTable from './OrganizationTable';\r\nimport { getRepositoriesActionCreator, loginActionCreator } from '../../reducers/repository';\r\nimport Title from '../Title';\r\n\r\nconst OrganizationList = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { accessToken } = useSelector((rootState) => rootState.state);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    renderTable,\r\n    currentOrganization,\r\n  } = OrganizationTable();\r\n\r\n  const onClick = () => {\r\n    if (currentOrganization.length > 0) {\r\n      setIsModalVisible(true);\r\n    } else {\r\n      message.error('Oops! You haven\\'t select a organization!!');\r\n    }\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    setIsLoading(true);\r\n    dispatch(loginActionCreator(currentOrganization));\r\n    axios(\r\n      {\r\n        url: `https://api.github.com/orgs/${currentOrganization}/repos?per_page=200`,\r\n        method: 'get',\r\n        headers: {\r\n          Authorization: `token ${accessToken}`,\r\n        },\r\n      },\r\n    )\r\n      .then((response) => {\r\n        dispatch(getRepositoriesActionCreator(response.data));\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) {\r\n          // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n          console.log(error.response.status);\r\n          console.log(error.response.headers);\r\n          message.error(error.response.data.message);\r\n        } else if (error.request) {\r\n          // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n          // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n          // Node.js의 http.ClientRequest 인스턴스입니다.\r\n          console.log(error.request);\r\n          message.error('Try again.');\r\n        } else {\r\n          // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n          message.error(error.message);\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n        dispatch(showTableAction);\r\n      });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        Select a Organization\r\n      </Title>\r\n      {renderTable()}\r\n      <Modal\r\n        title=\"Confirm\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>\r\n          You select\r\n          <strong>\r\n            {` ${currentOrganization}`}\r\n          </strong>\r\n          . Right?\r\n        </p>\r\n      </Modal>\r\n      <Button onClick={onClick} loading={isLoading}>Next</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrganizationList;\r\n","import { css } from '@emotion/react';\r\n\r\nexport const footer = css`\r\n  flex: 0;\r\n  align-self: center;\r\n`;\r\n\r\nexport const content = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  flex: 1;\r\n  align-self: center;\r\n`;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Divider } from 'antd';\r\nimport { SwitchTransition, CSSTransition } from 'react-transition-group';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport Home from './components/Home';\r\nimport AccessForm from './components/AccessForm/AccessForm';\r\nimport RepositoryList from './components/Repository/RepositoryList';\r\nimport Confirm from './components/Confirm';\r\nimport AppFooter from './components/AppFooter';\r\nimport OrganizationList from './components/Organization/OrganizationList';\r\nimport { homeAction } from './reducers/state';\r\nimport { content, footer } from './AppStyles';\r\nimport {\r\n  HOME,\r\n  ACCESS_FORM,\r\n  CONFIRM,\r\n  SELECT_ORGANIZATION,\r\n  SHOW_TABLE,\r\n} from './utils/strings.json';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { state } = useSelector((rootState) => rootState.state);\r\n\r\n  useEffect(() => {\r\n    dispatch(homeAction);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SwitchTransition\r\n        mode=\"out-in\"\r\n      >\r\n        <CSSTransition\r\n          key={state}\r\n          classNames=\"fade\"\r\n          addEndListener={(node, done) => {\r\n            node.addEventListener('transitionend', done, false);\r\n          }}\r\n        >\r\n          <div css={content}>\r\n            {state === HOME && <Home />}\r\n            {state === ACCESS_FORM && <AccessForm />}\r\n            {state === SELECT_ORGANIZATION && <OrganizationList />}\r\n            {state === SHOW_TABLE && <RepositoryList />}\r\n            {state === CONFIRM && <Confirm />}\r\n          </div>\r\n        </CSSTransition>\r\n      </SwitchTransition>\r\n      <div css={footer}>\r\n        <Divider />\r\n        <AppFooter />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
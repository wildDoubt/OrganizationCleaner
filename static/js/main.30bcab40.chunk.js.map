{"version":3,"sources":["reducers/state.js","reducers/organization.js","reducers/repository.js","reducers/index.js","styles/index.js","components/Title/index.js","components/Home.js","components/AccessForm/style.js","components/AccessForm/AccessForm.js","components/Repository/RepositoryTable.js","components/Repository/RepositoryList.js","components/Confirm.js","components/AppFooter.js","components/Organization/OrganizationTable.js","components/Organization/OrganizationList.js","AppStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","state","accessToken","result","successAction","type","DELETE_SUCCESS","errorAction","DELETE_ERROR","homeAction","HOME","AccessFormAction","ACCESS_FORM","SelectOrganizationAction","SELECT_ORGANIZATION","showTableAction","SHOW_TABLE","confirmAction","CONFIRM","reducer","action","ACCESS_TOKEN","data","login","avatar_url","name","description","map","organization","index","key","repositories","starred","watched","createdAt","updatedAt","repository","stargazers_count","watchers_count","created_at","updated_at","rootReducer","combineReducers","avatarWrapper","css","TableWrapper","titleWrapper","buttonWrapper","textInBody","Title","content","children","Home","dispatch","useDispatch","className","onClick","InputWrapper","config","url","method","AccessForm","Form","useForm","form","useState","loading","setLoading","onFinish","values","axios","headers","then","response","getOrganizationsActionCreator","catch","error","console","log","status","message","request","finally","Item","rules","required","placeholder","href","target","rel","htmlType","getLocaleString","date","Date","toLocaleString","RepositoryTable","dataIndex","useSelector","rootState","currentOrganization","isLoading","setIsLoading","selectedRepositories","setSelectedRepositories","setSearchText","setSearchedColumn","searchInput","useRef","handleSearch","selectedKeys","confirm","columns","title","sorter","a","b","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","value","onChange","e","onPressEnter","marginBottom","display","handleReset","size","width","icon","SearchOutlined","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","fontWeight","defaultSortOrder","useEffect","rowSelection","selectedRowKey","renderTable","dataSource","scroll","x","y","RepositoryList","isModalVisible","setIsModalVisible","hasSelected","length","justifyContent","gridTemplateColumns","gap","onOk","all","onCancel","Confirm","extra","AppFooter","src","preview","OrganizationTable","setCurrentOrganization","organizations","OrganizationList","getRepositoriesActionCreator","footer","App","SwitchTransition","mode","CSSTransition","classNames","addEndListener","node","done","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.30bcab40.chunk.js","sourcesContent":["import {\r\n    HOME,\r\n    ACCESS_FORM,\r\n    CONFIRM,\r\n    SELECT_ORGANIZATION,\r\n    SHOW_TABLE,\r\n    ACCESS_TOKEN,\r\n    DELETE_SUCCESS,\r\n    DELETE_ERROR\r\n} from '../utils/strings.json'\r\n\r\n\r\nexport const initialState = {\r\n    state: '',\r\n    accessToken: '',\r\n    result: 'idle'\r\n}\r\n\r\nexport const successAction = {\r\n    type: DELETE_SUCCESS\r\n}\r\n\r\nexport const errorAction = {\r\n    type: DELETE_ERROR\r\n}\r\n\r\nexport const tokenActionCreator = (data) => {\r\n    return {\r\n        type: ACCESS_TOKEN,\r\n        data\r\n    }\r\n}\r\n\r\nexport const homeAction = {\r\n    type: HOME,\r\n}\r\n\r\nexport const AccessFormAction = {\r\n    type: ACCESS_FORM,\r\n}\r\n\r\nexport const SelectOrganizationAction = {\r\n    type: SELECT_ORGANIZATION,\r\n}\r\n\r\nexport const showTableAction = {\r\n    type: SHOW_TABLE,\r\n}\r\n\r\nexport const confirmAction = {\r\n    type: CONFIRM,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case HOME:\r\n            return {\r\n                ...state,\r\n                state: HOME}\r\n        case ACCESS_FORM:\r\n            return {\r\n                ...state,\r\n                state: ACCESS_FORM}\r\n        case SELECT_ORGANIZATION:\r\n            return {\r\n                ...state,\r\n                state: SELECT_ORGANIZATION}\r\n        case SHOW_TABLE:\r\n            return {\r\n                ...state,\r\n                state: SHOW_TABLE}\r\n        case CONFIRM:\r\n            return {\r\n                ...state,\r\n                state: CONFIRM}\r\n        case ACCESS_TOKEN:\r\n            return {\r\n                ...state,\r\n                accessToken: action.data\r\n            }\r\n        case DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                result: 'success'\r\n            }\r\n        case DELETE_ERROR:\r\n            return {\r\n                ...state,\r\n                result: 'error'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","export const initialState = {\r\n    login: {\r\n        avatar_url: '',\r\n        name: ''\r\n    },\r\n    description: ''\r\n}\r\n\r\nexport const getOrganizationsActionCreator = (data) => {\r\n    return {\r\n        type: 'ACCESS_ORGANIZATIONS',\r\n        data\r\n    }\r\n}\r\nconst reducer = (state = [initialState], action) => {\r\n    switch (action.type) {\r\n        case 'ACCESS_ORGANIZATIONS':\r\n            return action.data.map((organization, index) => {\r\n                return {\r\n                    ...initialState,\r\n                    key: index,\r\n                    login: {\r\n                        avatar_url: organization.avatar_url,\r\n                        name: organization.login\r\n                    },\r\n                    description: organization.description\r\n                }\r\n            })\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","export const initialState = {\r\n    login: '',\r\n    repositories: [\r\n        {\r\n            name: '',\r\n            starred: 0,\r\n            watched: 0,\r\n            createdAt: null,\r\n            updatedAt: null\r\n        }\r\n    ]\r\n}\r\n\r\nexport const getRepositoriesActionCreator = (data) => {\r\n    return {\r\n        type: 'ACCESS_REPOSITORIES',\r\n        data\r\n    }\r\n}\r\n\r\nexport const loginActionCreator = (data) => {\r\n    return {\r\n        type: 'LOGIN',\r\n        data\r\n    }\r\n}\r\nconst reducer = (state = [initialState], action) => {\r\n    switch (action.type) {\r\n        case 'ACCESS_REPOSITORIES':\r\n            return {\r\n                ...state,\r\n                repositories: action.data.map((repository, index)=>{\r\n                    return {\r\n                        key:index,\r\n                        name: repository.name,\r\n                        starred: repository.stargazers_count,\r\n                        watched:repository.watchers_count,\r\n                        createdAt:repository.created_at,\r\n                        updatedAt:repository.updated_at\r\n                    }\r\n                })\r\n            }\r\n        case 'LOGIN':\r\n            return {\r\n                ...initialState,\r\n                login: action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import state from './state'\r\nimport {combineReducers} from \"redux\";\r\nimport organization from \"./organization\";\r\nimport repository from \"./repository\";\r\n\r\n// initialState를 기준으로 reducer 파일을 분리시킴.\r\n// reducer: 이전 상태와 액션을 이용해서 다음 상태를 결정\r\nconst rootReducer = combineReducers({\r\n    state,\r\n    organization,\r\n    repository\r\n});\r\n\r\nexport default rootReducer;\r\n","import {css} from \"@emotion/react\";\r\n\r\nexport const avatarWrapper = css`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  div {\r\n    margin-right: 10px;\r\n  }\r\n`\r\n\r\nexport const TableWrapper = css`\r\n  @media screen and (min-width: 360px) {\r\n    max-width: 30vh;\r\n  }\r\n\r\n  @media screen and (min-width: 425px) {\r\n    max-width: 40vh;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    min-width: 80vh;\r\n  }\r\n\r\n  @media screen and (min-width: 1096px) {\r\n    min-width: 120vh;\r\n  }\r\n`\r\nexport const titleWrapper = css`\r\n  font-family: 'Work Sans', sans-serif;\r\n  color: #EDEBEC;\r\n\r\n  @media screen and (min-width: 360px) {\r\n    font-size: 5vw;\r\n  }\r\n\r\n  @media screen and (min-width: 426px) {\r\n    font-size: 5vw;\r\n  }\r\n`\r\n\r\nexport const buttonWrapper = css`\r\n  font-family: 'Open Sans Condensed', sans-serif;\r\n  color: #FFF;\r\n\r\n  @media screen and (min-width: 360px) {\r\n    width: 26vw;\r\n    font-size: 2vw;\r\n    height: 10vw;\r\n  }\r\n\r\n  @media screen and (min-width: 426px) {\r\n    width: 30vw;\r\n    font-size: 3vw;\r\n    height: 6vw;\r\n  }\r\n`\r\n\r\nexport const textInBody = css`\r\n  color: #F7F8FB\r\n`\r\n","/** @jsxImportSource @emotion/react */\r\n\r\nimport {titleWrapper} from \"../../styles\";\r\n\r\nconst Title = (content) => <p css={titleWrapper}>{content.children}</p>;\r\n\r\nexport default Title;\r\n","/** @jsxImportSource @emotion/react */\r\nimport {Button} from 'antd'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {AccessFormAction} from \"../reducers/state\";\r\nimport {buttonWrapper, titleWrapper} from \"../styles\";\r\nimport Title from \"./Title\";\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const onClick = () => {\r\n        dispatch(AccessFormAction);\r\n    }\r\n\r\n    return <>\r\n        <Title>\r\n            Organization Repository Manager\r\n        </Title>\r\n\r\n        <Button\r\n            css={buttonWrapper}\r\n            type=\"primary\"\r\n            className='btn btn-white btn-animate'\r\n            onClick={onClick}\r\n        ><span>Go!</span></Button>\r\n    </>\r\n\r\n}\r\n\r\nexport default Home;\r\n","import {css} from \"@emotion/react\";\r\n\r\nexport const InputWrapper = css`\r\n  min-width: 300px;\r\n  min-height: 60px;\r\n`\r\n","/** @jsxImportSource @emotion/react */\r\n// https://api.github.com/user/orgs?access_token=ACCESS_TOKEN\r\n// https://developer.github.com/changes/2020-02-10-deprecating-auth-through-query-param/\r\nimport {Button, Form, Input, message} from \"antd\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {SelectOrganizationAction, tokenActionCreator} from \"../../reducers/state\";\r\nimport {InputWrapper} from './style'\r\nimport axios from 'axios';\r\nimport {useState} from \"react\";\r\nimport {getOrganizationsActionCreator} from \"../../reducers/organization\";\r\nimport {textInBody} from \"../../styles\";\r\n\r\nconst config = {\r\n    url: 'https://api.github.com/user/orgs',\r\n    method: 'get',\r\n}\r\n\r\nconst AccessForm = () => {\r\n    const dispatch = useDispatch();\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const onFinish = (values) => {\r\n        setLoading(true);\r\n        dispatch(tokenActionCreator(values.accessToken));\r\n        axios(\r\n            {\r\n                ...config,\r\n                headers: {\r\n                    'Authorization': `token ${values.accessToken}`\r\n                }\r\n            }\r\n        )\r\n            .then(response => {\r\n                dispatch(SelectOrganizationAction)\r\n                dispatch(getOrganizationsActionCreator(response.data));\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n                    console.log(error.response.data);\r\n                    console.log(error.response.status);\r\n                    console.log(error.response.headers);\r\n                    message.error(error.response.data.message);\r\n                }\r\n                else if (error.request) {\r\n                    // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n                    // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n                    // Node.js의 http.ClientRequest 인스턴스입니다.\r\n                    console.log(error.request);\r\n                    message.error('Try again.')\r\n                }\r\n                else {\r\n                    // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n                    message.error(error.message);\r\n                }\r\n            })\r\n            .finally(() => setLoading(false))\r\n\r\n\r\n    }\r\n\r\n    return <Form form={form} onFinish={onFinish}>\r\n        <Form.Item\r\n            name=\"accessToken\"\r\n            rules={[{\r\n                required: true\r\n            }]}>\r\n            <Input\r\n                css={InputWrapper}\r\n                placeholder=\"Github Access Token\"/>\r\n        </Form.Item>\r\n        <p><a\r\n            css={textInBody}\r\n            href=\"https://github.com/settings/tokens\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\">Get Access Token</a></p>\r\n        <Form.Item>\r\n            <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                loading={loading}>\r\n                Submit\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n\r\n}\r\n\r\nexport default AccessForm;\r\n","/** @jsxImportSource @emotion/react */\r\nimport {Button, Input, Space, Table} from \"antd\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {TableWrapper} from \"../../styles\";\r\nimport {useEffect, useState, useRef} from \"react\";\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\nconst getLocaleString = date => {\r\n    const a = new Date(date);\r\n    return a.toLocaleString();\r\n}\r\n\r\nconst RepositoryTable = () => {\r\n    const repositories = useSelector(rootState => rootState.repository.repositories)\r\n    const currentOrganization = useSelector(rootState => rootState.repository.login)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedRepositories, setSelectedRepositories] = useState([]);\r\n    const [searchText, setSearchText] = useState();\r\n    const [searchedColumn, setSearchedColumn] = useState();\r\n    const searchInput = useRef();\r\n\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText('');\r\n    };\r\n\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={searchInput}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{marginBottom: 8, display: 'block'}}\r\n                />\r\n                <Space>\r\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90}}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{color: filtered ? '#1890ff' : undefined}}/>,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => searchInput.current.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            <a\r\n                style={{fontWeight: 'bold'}}\r\n                href={`https://www.github.com/${currentOrganization}/${text}`}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n            >{text}</a>\r\n    });\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            sorter: (a, b) => (a.name > b.name) - (a.name < b.name),\r\n            ...getColumnSearchProps('name'),\r\n        },\r\n        {\r\n            title: 'Creation Date',\r\n            dataIndex: 'createdAt',\r\n            render: getLocaleString,\r\n            defaultSortOrder: 'descend',\r\n            sorter: (a, b) => (a.createdAt > b.createdAt) - (a.createdAt < b.createdAt)\r\n        },\r\n        {\r\n            title: 'Last Updated Date',\r\n            dataIndex: 'updatedAt',\r\n            render: getLocaleString,\r\n            sorter: (a, b) => (a.updatedAt > b.updatedAt) - (a.updatedAt < b.updatedAt)\r\n        },\r\n        {\r\n            title: 'Star',\r\n            dataIndex: 'starred',\r\n            width: 60,\r\n            sorter: (a, b) => (a.starred > b.starred) - (a.starred < b.starred)\r\n        },\r\n        {\r\n            title: 'Watch',\r\n            dataIndex: 'watched',\r\n            width: 60,\r\n            sorter: (a, b) => (a.watched > b.watched) - (a.watched < b.watched)\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setIsLoading(false);\r\n    }, [repositories])\r\n\r\n    const onSelectChange = (selectedRowKey) => {\r\n        setSelectedRepositories(selectedRowKey);\r\n    }\r\n\r\n    const rowSelection = {\r\n        onChange: onSelectChange\r\n    }\r\n\r\n    const renderTable = () => {\r\n        return <Table\r\n            css={TableWrapper}\r\n            columns={columns}\r\n            rowSelection={rowSelection}\r\n            dataSource={repositories}\r\n            loading={isLoading}\r\n            scroll={{x: 'calc(700px)', y: 420}}>\r\n        </Table>\r\n    }\r\n    return {\r\n        renderTable,\r\n        selectedRepositories\r\n    }\r\n}\r\n\r\nexport default RepositoryTable;\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Image, message, Modal} from \"antd\";\r\nimport {\r\n    confirmAction, errorAction,\r\n    selectedRepositoriesActionCreator,\r\n    SelectOrganizationAction,\r\n    successAction\r\n} from \"../../reducers/state\";\r\nimport {avatarWrapper, titleWrapper} from \"../../styles\";\r\nimport RepositoryTable from \"./RepositoryTable\";\r\nimport Title from \"../Title\";\r\nimport {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst RepositoryList = () => {\r\n    const dispatch = useDispatch();\r\n    const repositories = useSelector(rootState => rootState.repository.repositories)\r\n    const {accessToken} = useSelector(rootState => rootState.state)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const currentOrganization = useSelector(rootState => rootState.repository.login)\r\n\r\n    const onBackButtonClick = () => {\r\n        dispatch(SelectOrganizationAction);\r\n    }\r\n\r\n    const onDeleteButtonClick = () => {\r\n        setIsModalVisible(true);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        axios.all(selectedRepositories.map((index) => {\r\n            axios({\r\n                method: 'delete',\r\n                url: `https://api.github.com/repos/${currentOrganization}/${repositories[index].name}`,\r\n                headers: {\r\n                    'Authorization': `token ${accessToken}`\r\n                }\r\n            })\r\n        }))\r\n            .then((response) => {\r\n                dispatch(successAction);\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    message.error(error.response.data.message);\r\n                } else if (error.request) {\r\n                    message.error('Try again.')\r\n                } else {\r\n                    message.error(error.message);\r\n                }\r\n                dispatch(errorAction);\r\n            })\r\n\r\n        dispatch(confirmAction);\r\n    }\r\n\r\n    const {\r\n        renderTable,\r\n        selectedRepositories\r\n    } = RepositoryTable();\r\n\r\n    const hasSelected = selectedRepositories.length > 0;\r\n\r\n    return <>\r\n        <Title>\r\n            Select Repositories\r\n        </Title>\r\n        {hasSelected &&\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-start'\r\n        }}>\r\n            <p>{selectedRepositories.length} selected</p>\r\n        </div>\r\n        }\r\n        {renderTable()}\r\n        <div style={\r\n            {\r\n                display: \"grid\",\r\n                gridTemplateColumns: '1fr 1fr',\r\n                gap: '0 40px'\r\n            }\r\n        }\r\n        >\r\n            <Button\r\n                onClick={onBackButtonClick}\r\n            >Back</Button>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={onDeleteButtonClick}\r\n            >Delete</Button>\r\n        </div>\r\n        <Modal title=\"Confirm\"\r\n               visible={isModalVisible}\r\n               onOk={handleOk}\r\n               onCancel={handleCancel}>\r\n            <p><strong>{selectedRepositories.length}</strong> repositories will be deleted.</p>\r\n        </Modal>\r\n    </>\r\n\r\n}\r\n\r\nexport default RepositoryList;\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, Result} from \"antd\";\r\nimport {homeAction, SelectOrganizationAction} from \"../reducers/state\";\r\n// 삭제 완료되면 자동으로 Home으로 이동\r\nconst Confirm = () => {\r\n    const dispatch = useDispatch();\r\n    const {result} = useSelector(rootState => rootState.state)\r\n    const onClick = () => {\r\n        dispatch(homeAction);\r\n    }\r\n\r\n    const onClickBackButton = () => {\r\n        dispatch(SelectOrganizationAction);\r\n    }\r\n\r\n    return <>\r\n        {result === 'success' && <Result\r\n            status=\"success\"\r\n            title=\"Successfully deleted repositories. \"\r\n            extra={<Button\r\n                type=\"primary\"\r\n                onClick={onClick}\r\n            >Back Home</Button>}/>}\r\n        {result === 'error' && <Result\r\n            status=\"warning\"\r\n            title=\"There are some problems with your operation.\"\r\n            extra={<Button\r\n                type=\"primary\"\r\n                onClick={onClickBackButton}\r\n            >Back</Button>}/>}\r\n\r\n    </>\r\n\r\n}\r\n\r\nexport default Confirm;\r\n","/** @jsxImportSource @emotion/react */\r\nimport {textInBody} from \"../styles\";\r\n\r\n\r\nconst AppFooter = () => {\r\n    return <>\r\n        Made by&nbsp;\r\n        <a css={textInBody}\r\n            href=\"https://github.com/wilddoubt\"\r\n           target=\"_blank\"\r\n           rel=\"noreferrer noopener\">\r\n            wildDoubt\r\n        </a>\r\n    </>\r\n\r\n}\r\n\r\nexport default AppFooter;\r\n","/** @jsxImportSource @emotion/react */\r\nimport {Image, Table} from \"antd\";\r\nimport {useState} from \"react\";\r\nimport {avatarWrapper, TableWrapper} from \"../../styles\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'login',\r\n        render: ({avatar_url, name}) => <div css={avatarWrapper}>\r\n            <Image src={avatar_url}\r\n                   width={16}\r\n                   preview={false}/>\r\n            <a\r\n                style={{fontWeight: 'bold'}}\r\n                href={'https://www.github.com/' + name}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n            >{name}</a>\r\n        </div>\r\n    },\r\n    {\r\n        title: 'Description',\r\n        dataIndex: 'description',\r\n    }\r\n]\r\n\r\n\r\nconst OrganizationTable = () => {\r\n    const [currentOrganization, setCurrentOrganization] = useState('');\r\n    const organizations = useSelector((rootState) => {\r\n        return rootState.organization\r\n    })\r\n\r\n    const onSelectChange = selectedRowKey => {\r\n        setCurrentOrganization(organizations[selectedRowKey].login.name);\r\n    }\r\n\r\n\r\n    const rowSelection = {\r\n        type: 'radio',\r\n        onChange: onSelectChange\r\n    }\r\n\r\n    const renderTable = () => {\r\n        return <Table\r\n            css={TableWrapper}\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={organizations}\r\n        />\r\n    }\r\n\r\n    return {\r\n        renderTable,\r\n        currentOrganization\r\n    }\r\n}\r\n\r\nexport default OrganizationTable;\r\n","/** @jsxImportSource @emotion/react */\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Button, message, Modal} from \"antd\";\r\nimport {showTableAction} from \"../../reducers/state\";\r\nimport OrganizationTable from './OrganizationTable'\r\nimport {getRepositoriesActionCreator, loginActionCreator} from \"../../reducers/repository\";\r\nimport {useState} from \"react\";\r\nimport Title from \"../Title\";\r\nimport axios from \"axios\";\r\n\r\nconst OrganizationList = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const {accessToken} = useSelector(rootState => rootState.state)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        if (currentOrganization.length > 0) {\r\n            setIsModalVisible(true);\r\n        } else {\r\n            message.error('Oops! You haven\\'t select a organization!!')\r\n        }\r\n\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n        setIsLoading(true)\r\n        dispatch(loginActionCreator(currentOrganization));\r\n        axios(\r\n            {\r\n                url: `https://api.github.com/orgs/${currentOrganization}/repos?per_page=200`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Authorization': `token ${accessToken}`\r\n                }\r\n            }\r\n        )\r\n            .then(response => {\r\n                dispatch(getRepositoriesActionCreator(response.data));\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    // 요청이 이루어졌으며 서버가 2xx의 범위를 벗어나는 상태 코드로 응답했습니다.\r\n                    console.log(error.response.status);\r\n                    console.log(error.response.headers);\r\n                    message.error(error.response.data.message);\r\n                } else if (error.request) {\r\n                    // 요청이 이루어 졌으나 응답을 받지 못했습니다.\r\n                    // `error.request`는 브라우저의 XMLHttpRequest 인스턴스 또는\r\n                    // Node.js의 http.ClientRequest 인스턴스입니다.\r\n                    console.log(error.request);\r\n                    message.error('Try again.')\r\n                } else {\r\n                    // 오류를 발생시킨 요청을 설정하는 중에 문제가 발생했습니다.\r\n                    message.error(error.message);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n                dispatch(showTableAction);\r\n            })\r\n\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    }\r\n\r\n    const {\r\n        renderTable,\r\n        currentOrganization,\r\n    } = OrganizationTable();\r\n\r\n    return <>\r\n        <Title>\r\n            Select a Organization\r\n        </Title>\r\n        {renderTable()}\r\n        <Modal title=\"Confirm\"\r\n               visible={isModalVisible}\r\n               onOk={handleOk}\r\n               onCancel={handleCancel}>\r\n            <p>You select <strong>{currentOrganization}</strong>. Right?</p>\r\n        </Modal>\r\n        <Button onClick={onClick} loading={isLoading}>Next</Button>\r\n    </>\r\n\r\n}\r\n\r\nexport default OrganizationList;\r\n","import {css} from \"@emotion/react\";\r\n\r\nexport const footer = css`\r\n  flex: 0;\r\n  align-self: center;\r\n`\r\n\r\nexport const content = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  flex: 1;\r\n  align-self: center;\r\n`\r\n","/** @jsxImportSource @emotion/react */\r\nimport Home from './components/Home'\r\nimport AccessForm from './components/AccessForm/AccessForm'\r\nimport RepositoryList from './components/Repository/RepositoryList'\r\nimport Confirm from './components/Confirm'\r\nimport AppFooter from './components/AppFooter'\r\nimport OrganizationList from './components/Organization/OrganizationList'\r\nimport {Divider} from \"antd\";\r\nimport {SwitchTransition, CSSTransition} from 'react-transition-group';\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {homeAction} from \"./reducers/state\";\r\nimport {content, footer} from \"./AppStyles\";\r\nimport {\r\n    HOME,\r\n    ACCESS_FORM,\r\n    CONFIRM,\r\n    SELECT_ORGANIZATION,\r\n    SHOW_TABLE\r\n} from './utils/strings.json'\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const {state} = useSelector((rootState) => rootState.state);\r\n\r\n    useEffect(() => {\r\n        dispatch(homeAction);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <SwitchTransition\r\n                mode=\"out-in\">\r\n                <CSSTransition\r\n                    key={state}\r\n                    classNames=\"fade\"\r\n                    addEndListener={(node, done) => {\r\n                        node.addEventListener(\"transitionend\", done, false);\r\n                    }}\r\n                >\r\n                    <div css={content}>\r\n                        {state === HOME && <Home/>}\r\n                        {state === ACCESS_FORM && <AccessForm/>}\r\n                        {state === SELECT_ORGANIZATION && <OrganizationList/>}\r\n                        {state === SHOW_TABLE && <RepositoryList/>}\r\n                        {state === CONFIRM && <Confirm/>}\r\n                    </div>\r\n                </CSSTransition>\r\n            </SwitchTransition>\r\n            <div css={footer}>\r\n                <Divider/>\r\n                <AppFooter/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport './index.css';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}